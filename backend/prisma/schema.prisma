generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id @default(cuid())
  email             String     @unique
  password          String
  firstName         String     @map("first_name")
  lastName          String     @map("last_name")
  role              UserRole   @default(USER)
  isActive          Boolean    @default(true) @map("is_active")
  emailVerified     Boolean    @default(false) @map("email_verified")
  lastLogin         DateTime?  @map("last_login")
  createdAt         DateTime   @default(now()) @map("created_at")
  updatedAt         DateTime   @updatedAt @map("updated_at")
  activities        Activity[]
  assignedControls  Control[]  @relation("ControlOwner")
  uploadedEvidence  Evidence[] @relation("EvidenceUploader")
  assignedIncidents Incident[] @relation("IncidentAssignee")
  reportedIncidents Incident[] @relation("IncidentReporter")
  createdPolicies   Policy[]   @relation("PolicyAuthor")
  createdRisks      Risk[]     @relation("RiskCreator")
  assignedRisks     Risk[]     @relation("RiskOwner")
  assignedTasks     Task[]     @relation("AssignedTasks")
  createdTasks      Task[]     @relation("CreatedTasks")

  @@map("users")
}

model Task {
  id          String       @id @default(cuid())
  title       String
  description String?
  status      TaskStatus   @default(PENDING)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?    @map("due_date")
  startDate   DateTime?    @map("start_date")
  endDate     DateTime?    @map("end_date")
  progress    Int          @default(0)
  assigneeId  String?      @map("assignee_id")
  creatorId   String       @map("creator_id")
  riskId      String?      @map("risk_id")
  controlId   String?      @map("control_id")
  incidentId  String?      @map("incident_id")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  activities  Activity[]
  evidence    Evidence[]
  assignee    User?        @relation("AssignedTasks", fields: [assigneeId], references: [id])
  control     Control?     @relation(fields: [controlId], references: [id])
  creator     User         @relation("CreatedTasks", fields: [creatorId], references: [id])
  incident    Incident?    @relation(fields: [incidentId], references: [id])
  risk        Risk?        @relation(fields: [riskId], references: [id])

  @@index([assigneeId])
  @@index([creatorId])
  @@index([status])
  @@map("tasks")
}

model Risk {
  id           String     @id @default(cuid())
  title        String
  description  String?
  level        RiskLevel
  status       RiskStatus @default(IDENTIFIED)
  likelihood   Int
  impact       Int
  riskScore    Float      @map("risk_score")
  residualRisk Float?     @map("residual_risk")
  targetRisk   Float?     @map("target_risk")
  ownerId      String     @map("owner_id")
  creatorId    String     @map("creator_id")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  activities   Activity[]
  evidence     Evidence[]
  creator      User       @relation("RiskCreator", fields: [creatorId], references: [id])
  owner        User       @relation("RiskOwner", fields: [ownerId], references: [id])
  tasks        Task[]
  controls     Control[]  @relation("ControlToRisk")
  incidents    Incident[] @relation("IncidentToRisk")

  @@index([ownerId])
  @@index([status])
  @@index([level])
  @@map("risks")
}

model Control {
  id                 String        @id @default(cuid())
  title              String
  description        String?
  type               ControlType
  status             ControlStatus @default(NOT_IMPLEMENTED)
  framework          String?
  reference          String?
  effectiveness      Int?
  implementationDate DateTime?     @map("implementation_date")
  lastTestDate       DateTime?     @map("last_test_date")
  nextTestDate       DateTime?     @map("next_test_date")
  ownerId            String        @map("owner_id")
  createdAt          DateTime      @default(now()) @map("created_at")
  updatedAt          DateTime      @updatedAt @map("updated_at")
  activities         Activity[]
  owner              User          @relation("ControlOwner", fields: [ownerId], references: [id])
  evidence           Evidence[]
  tasks              Task[]
  risks              Risk[]        @relation("ControlToRisk")

  @@index([ownerId])
  @@index([status])
  @@map("controls")
}

model Incident {
  id             String           @id @default(cuid())
  title          String
  description    String?
  severity       IncidentSeverity
  status         IncidentStatus   @default(OPEN)
  detectedDate   DateTime         @map("detected_date")
  resolvedDate   DateTime?        @map("resolved_date")
  rootCause      String?          @map("root_cause")
  impact         String?
  resolution     String?
  lessonsLearned String?          @map("lessons_learned")
  reporterId     String           @map("reporter_id")
  assigneeId     String?          @map("assignee_id")
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  activities     Activity[]
  evidence       Evidence[]
  assignee       User?            @relation("IncidentAssignee", fields: [assigneeId], references: [id])
  reporter       User             @relation("IncidentReporter", fields: [reporterId], references: [id])
  tasks          Task[]
  risks          Risk[]           @relation("IncidentToRisk")

  @@index([reporterId])
  @@index([assigneeId])
  @@index([status])
  @@index([severity])
  @@map("incidents")
}

model Policy {
  id             String       @id @default(cuid())
  title          String
  description    String?
  version        String
  status         PolicyStatus @default(DRAFT)
  effectiveDate  DateTime?    @map("effective_date")
  reviewDate     DateTime?    @map("review_date")
  nextReviewDate DateTime?    @map("next_review_date")
  content        String?
  authorId       String       @map("author_id")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  activities     Activity[]
  evidence       Evidence[]
  author         User         @relation("PolicyAuthor", fields: [authorId], references: [id])

  @@index([authorId])
  @@index([status])
  @@map("policies")
}

model Evidence {
  id          String    @id @default(cuid())
  title       String
  description String?
  fileName    String    @map("file_name")
  filePath    String    @map("file_path")
  fileSize    Int       @map("file_size")
  mimeType    String    @map("mime_type")
  uploaderId  String    @map("uploader_id")
  taskId      String?   @map("task_id")
  riskId      String?   @map("risk_id")
  controlId   String?   @map("control_id")
  incidentId  String?   @map("incident_id")
  policyId    String?   @map("policy_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  control     Control?  @relation(fields: [controlId], references: [id])
  incident    Incident? @relation(fields: [incidentId], references: [id])
  policy      Policy?   @relation(fields: [policyId], references: [id])
  risk        Risk?     @relation(fields: [riskId], references: [id])
  task        Task?     @relation(fields: [taskId], references: [id])
  uploader    User      @relation("EvidenceUploader", fields: [uploaderId], references: [id])

  @@index([uploaderId])
  @@map("evidence")
}

model Vendor {
  id             String       @id @default(cuid())
  name           String
  contactName    String?      @map("contact_name")
  contactEmail   String?      @map("contact_email")
  contactPhone   String?      @map("contact_phone")
  website        String?
  riskLevel      VendorRisk   @default(LOW) @map("risk_level")
  status         VendorStatus @default(PROSPECTIVE)
  lastAssessment DateTime?    @map("last_assessment")
  nextAssessment DateTime?    @map("next_assessment")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  activities     Activity[]
  systems        System[]

  @@map("vendors")
}

model System {
  id          String            @id @default(cuid())
  name        String
  description String?
  criticality SystemCriticality
  environment String?
  dataTypes   String[]          @map("data_types")
  vendorId    String?           @map("vendor_id")
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  activities  Activity[]
  assets      Asset[]
  vendor      Vendor?           @relation(fields: [vendorId], references: [id])

  @@index([vendorId])
  @@map("systems")
}

model Asset {
  id           String     @id @default(cuid())
  name         String
  description  String?
  type         AssetType
  serialNumber String?    @map("serial_number")
  location     String?
  value        Float?
  systemId     String?    @map("system_id")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  activities   Activity[]
  system       System?    @relation(fields: [systemId], references: [id])

  @@index([systemId])
  @@map("assets")
}

model Employee {
  id         String         @id @default(cuid())
  employeeId String         @unique @map("employee_id")
  firstName  String         @map("first_name")
  lastName   String         @map("last_name")
  email      String         @unique
  department String?
  position   String?
  manager    String?
  status     EmployeeStatus @default(ACTIVE)
  startDate  DateTime?      @map("start_date")
  endDate    DateTime?      @map("end_date")
  createdAt  DateTime       @default(now()) @map("created_at")
  updatedAt  DateTime       @updatedAt @map("updated_at")
  activities Activity[]

  @@map("employees")
}

model Activity {
  id         String    @id @default(cuid())
  action     String
  entityType String    @map("entity_type")
  entityId   String    @map("entity_id")
  details    Json?
  ipAddress  String?   @map("ip_address")
  userAgent  String?   @map("user_agent")
  userId     String    @map("user_id")
  taskId     String?   @map("task_id")
  riskId     String?   @map("risk_id")
  controlId  String?   @map("control_id")
  incidentId String?   @map("incident_id")
  policyId   String?   @map("policy_id")
  vendorId   String?   @map("vendor_id")
  systemId   String?   @map("system_id")
  assetId    String?   @map("asset_id")
  employeeId String?   @map("employee_record_id")
  createdAt  DateTime  @default(now()) @map("created_at")
  asset      Asset?    @relation(fields: [assetId], references: [id])
  control    Control?  @relation(fields: [controlId], references: [id])
  employee   Employee? @relation(fields: [employeeId], references: [id])
  incident   Incident? @relation(fields: [incidentId], references: [id])
  policy     Policy?   @relation(fields: [policyId], references: [id])
  risk       Risk?     @relation(fields: [riskId], references: [id])
  system     System?   @relation(fields: [systemId], references: [id])
  task       Task?     @relation(fields: [taskId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
  vendor     Vendor?   @relation(fields: [vendorId], references: [id])

  @@index([userId])
  @@index([entityType, entityId])
  @@map("activities")
}

enum UserRole {
  ADMIN
  RISK_MANAGER
  COMPLIANCE_OFFICER
  VIEWER
  USER
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
  OVERDUE
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum RiskLevel {
  VERY_LOW
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

enum RiskStatus {
  IDENTIFIED
  ASSESSED
  MITIGATED
  MONITORED
  CLOSED
}

enum ControlType {
  PREVENTIVE
  DETECTIVE
  CORRECTIVE
  COMPENSATING
}

enum ControlStatus {
  NOT_IMPLEMENTED
  IN_PROGRESS
  IMPLEMENTED
  NEEDS_UPDATE
  DEPRECATED
}

enum IncidentSeverity {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum IncidentStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
  ESCALATED
}

enum PolicyStatus {
  DRAFT
  UNDER_REVIEW
  APPROVED
  ACTIVE
  ARCHIVED
}

enum VendorRisk {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum VendorStatus {
  PROSPECTIVE
  ACTIVE
  INACTIVE
  TERMINATED
}

enum AssetType {
  HARDWARE
  SOFTWARE
  DATA
  PERSONNEL
  FACILITY
  CLOUD
}

enum SystemCriticality {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum EmployeeStatus {
  ACTIVE
  INACTIVE
  ON_LEAVE
  TERMINATED
}
